
@{
    ViewData["Title"] = "Template Details";
}

@model CompositeModel

<h2>Template Details</h2>
<h5>File Name: <span>@ViewData["cFileName"]</span></h5><hr />

<div class="row justify-content-end">
    @*<a class="btn btn-success mx-3" href="@Url.Action("AddParamsInTemplate", "Home", new { cName = @ViewData["cFileName"] })">Run This Config File</a>*@
    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#exampleModal">
        Run from this template
    </button>
</div>

<div class="row">
    <div class="grid-container">
        @foreach (ContainerModel container in Model.ContainersFromFile)
        {
            <div class="card border-success mx-3 my-3">
                <div class="card-header font-weight-bold">@container.Name</div>
                <div class="card-body">
                    <ul>
                        <li><b>Image:</b> <span>@container.Image</span></li>

                        <li>
                            <b>OS Type:</b> <span>
                                @if (container.IsWindows)
                                {<text>Windows</text> }
                                else
                                {<text>Linux</text>}
                            </span>
                        </li>

                        @if (container.PortMappings != null)
                        {
                            foreach (string ports in container.PortMappings)
                            {
                                String[] pairs = ports.Split(":");
                                String parameter = pairs[0].Substring(3, pairs[0].Length - 5);
                                <li><b>Ports:</b> <span style="background-color: forestgreen; color: white; border-radius: 10px; padding: 0 5px 0 5px;">
                                    @parameter</span><span> : @pairs[1]</span></li>
                            }
                        }

                        @if (container.EnvironmentVariables != null)
                        {
                            if (container.EnvironmentVariables is List<string>)
                            {
                                <li>
                                    <b>Environment Variables : </b>
                                    <ul>
                                        @foreach (string pair in (List<string>)container.EnvironmentVariables)
                                        {
                                            <li>@pair</li>
                                        }
                                    </ul>
                                </li>
                            }
                            else
                            {
                                <li>
                                    <b>Environment Variables : </b>
                                    <ul>
                                        @foreach (KeyValuePair<string, string> pair in (Dictionary<string, string>)container.EnvironmentVariables)
                                        {
                                            <li>@pair.Key : @pair.Value</li>
                                        }
                                    </ul>
                                </li>

                            }
                        }

                        @if (container.Volumes != null)
                        {
                            if (container.Volumes is List<string>)
                            {
                                <li>
                                    <b>Volumes : </b>
                                    <ul>
                                        @foreach (string val in (List<string>)container.Volumes)
                                        {
                                            string[] pairs = val.Split(":");
                                            <li>@pairs[0] : @pairs[1]</li>
                                        }
                                    </ul>
                                </li>
                            }
                            else
                            {
                                <li>
                                    <b>Volumes : </b>
                                    <ul>
                                        @foreach (Dictionary<string, string> pair in (List<Dictionary<string, string>>)container.Volumes)
                                        {
                                            @foreach (KeyValuePair<string, string> val in (Dictionary<string, string>)pair)
                                            {
                                                <li>@val.Key : @val.Value</li>
                                            }
                                        }
                                    </ul>
                                </li>

                            }
                        }

                    </ul>
                </div>
            </div>
        }
    </div>
</div>


@{String[] parameters = (String [])ViewData["params"]; }


<!-- Add Parameters Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Parameters for @ViewData["cFileName"]<span>.yaml</span></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <form id="paramsForm" action="@Url.Action("CreateCustom")" method="POST">
                        @{ foreach (string item in parameters)
                            {
                                <div class="row">

                                    <div class="form-group col-md-6">
                                        <label for="my-input">@item</label>
                                        <input id="my-input" class="form-control" type="text" name="@item">
                                    </div>

                                </div>
                            }
                        }
                        <input type="hidden" name="fileString" value="@ViewData["fileString"]" />
                        <button type="submit" class="btn btn-success">Verify</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
